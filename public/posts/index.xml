<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Balooga.com</title>
    <link>https://www.balooga.com/posts/</link>
    <description>Recent content in Posts on Balooga.com</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Nov 2024 23:36:56 -0700</lastBuildDate>
    <atom:link href="https://www.balooga.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Software Estimation</title>
      <link>https://www.balooga.com/posts/software-estimation/</link>
      <pubDate>Fri, 01 Nov 2024 23:36:56 -0700</pubDate>
      <guid>https://www.balooga.com/posts/software-estimation/</guid>
      <description>(v0.3)&#xA;The amount of effort and time required to complete any software task is almost always underestimated. In other words, software always takes longer than you think. Here are three somewhat tongue-in-cheek strategies for estimating any software task;&#xA;Time how long it takes to do a thing the first time and you should have a good enough handle on estimating how long it will take doing that exact thing again.</description>
    </item>
    <item>
      <title>Pong Tutorial in Godot; Part 1</title>
      <link>https://www.balooga.com/posts/pong-tutorial-1/pong-tutorial-1/</link>
      <pubDate>Sun, 27 Oct 2024 22:30:56 -0700</pubDate>
      <guid>https://www.balooga.com/posts/pong-tutorial-1/pong-tutorial-1/</guid>
      <description>(v0.1)&#xA;Table of Contents&#xA;Introduction The Godot Graphics Pipeline Install the Godot Engine Design Create the Pong Project Viewport Classes and Class Inheritance Text Label Object Instantiation and Variables Dynamic vs Static Typing Frame Rate Singletons Game Loop The SceneTree Variable Scope Static, Instance, and Virtual Methods Conditionals Constants Handling Player Input Handling Input Game Exit Object Constructors and Destructors, Finalizers Information Hiding and Encapsulation Alternative Implementation Composition vs Inheritance Conclusion The Final Code Advanced Concepts Versions Introduction Link to heading This is the first in a series of tutorials building up to a basic Pong clone implemented using the Godot engine.</description>
    </item>
    <item>
      <title>Choosing between RPC and Rest for API Designs</title>
      <link>https://www.balooga.com/posts/rpc-vs-rest/</link>
      <pubDate>Thu, 22 Feb 2018 23:36:56 -0700</pubDate>
      <guid>https://www.balooga.com/posts/rpc-vs-rest/</guid>
      <description>(0.1)&#xA;The following diagram illustrates my thinking when designing an API.&#xA;I a _ s n _ d _ ┌ │ └ t _ ─ R ─ h &#34; _ ─ e ─ e i _ ─ s ─ d _ ─ t ─ A e _ ─ ─ P m _ ─ o ─ _ I p _ ─ r ┬ ▽ o _ │ │ │ │ │ │ │ │ │ │ │ │ │ └ ─ ─ _ b t _ n ─ ─ R ─ _ o e _ o ─ ─ P ─ _ t n _ ─ ─ C ─ _ h t _ ─ ─ ?</description>
    </item>
  </channel>
</rss>
